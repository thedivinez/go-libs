// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: quicksoccer.proto

package quicksoccer

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner   string `protobuf:"bytes,1,opt,name=Owner,proto3" json:"owner"`      
	Account string `protobuf:"bytes,2,opt,name=Account,proto3" json:"account"`  
	Status  string `protobuf:"bytes,3,opt,name=Status,proto3" json:"status"`    
	Page    string `protobuf:"bytes,4,opt,name=Page,proto3" json:"page"`        
}

func (x *GetBetsRequest) Reset() {
	*x = GetBetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBetsRequest) ProtoMessage() {}

func (x *GetBetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBetsRequest.ProtoReflect.Descriptor instead.
func (*GetBetsRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{0}
}

func (x *GetBetsRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GetBetsRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetBetsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetBetsRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

type GetBetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bets []*Bet `protobuf:"bytes,1,rep,name=Bets,proto3" json:"bets"`  
}

func (x *GetBetsResponse) Reset() {
	*x = GetBetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBetsResponse) ProtoMessage() {}

func (x *GetBetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBetsResponse.ProtoReflect.Descriptor instead.
func (*GetBetsResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{1}
}

func (x *GetBetsResponse) GetBets() []*Bet {
	if x != nil {
		return x.Bets
	}
	return nil
}

type Bet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetId       string  `protobuf:"bytes,1,opt,name=BetId,proto3" json:"id" bson:"_id"`                
	Payout      float64 `protobuf:"fixed64,2,opt,name=Payout,proto3" json:"payout" bson:"payout"`            
	Owner       string  `protobuf:"bytes,3,opt,name=Owner,proto3" json:"-" bson:"owner,omitempty"`                
	Type        string  `protobuf:"bytes,4,opt,name=Type,proto3" json:"type" bson:"type,omitempty"`                  
	Stake       float64 `protobuf:"fixed64,5,opt,name=Stake,proto3" json:"stake" bson:"stake,omitempty"`              
	Status      string  `protobuf:"bytes,6,opt,name=Status,proto3" json:"status" bson:"status,omitempty"`              
	Account     string  `protobuf:"bytes,7,opt,name=Account,proto3" json:"account" bson:"account,omitempty"`            
	MatchId     string  `protobuf:"bytes,8,opt,name=MatchId,proto3" json:"matchId" bson:"matchId,omitempty"`            
	Prediction  string  `protobuf:"bytes,9,opt,name=Prediction,proto3" json:"prediction" bson:"prediction,omitempty"`      
	DateCreated int64   `protobuf:"varint,10,opt,name=DateCreated,proto3" json:"dateCreated" bson:"dateCreated,omitempty"`  
	OrgId       string  `protobuf:"bytes,11,opt,name=OrgId,proto3" json:"orgId" bson:"orgId,omitempty"`               
}

func (x *Bet) Reset() {
	*x = Bet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bet) ProtoMessage() {}

func (x *Bet) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bet.ProtoReflect.Descriptor instead.
func (*Bet) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{2}
}

func (x *Bet) GetBetId() string {
	if x != nil {
		return x.BetId
	}
	return ""
}

func (x *Bet) GetPayout() float64 {
	if x != nil {
		return x.Payout
	}
	return 0
}

func (x *Bet) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Bet) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Bet) GetStake() float64 {
	if x != nil {
		return x.Stake
	}
	return 0
}

func (x *Bet) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Bet) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Bet) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *Bet) GetPrediction() string {
	if x != nil {
		return x.Prediction
	}
	return ""
}

func (x *Bet) GetDateCreated() int64 {
	if x != nil {
		return x.DateCreated
	}
	return 0
}

func (x *Bet) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string     `protobuf:"bytes,1,opt,name=ID,proto3" json:"id" form:"id" bson:"_id"`                      
	Type        string     `protobuf:"bytes,2,opt,name=Type,proto3" json:"type" form:"type" bson:"type"`                  
	Odds        *Odds      `protobuf:"bytes,3,opt,name=Odds,proto3" json:"odds" form:"odds" bson:"odds,omitempty"`                  
	OrgID       string     `protobuf:"bytes,4,opt,name=OrgID,proto3" json:"orgId" form:"orgId" bson:"orgId,omitempty"`                
	Title       string     `protobuf:"bytes,5,opt,name=Title,proto3" json:"title" form:"title" bson:"title,omitempty"`                
	League      *League    `protobuf:"bytes,6,opt,name=League,proto3" json:"league" form:"league" bson:"league,omitempty"`              
	Status      string     `protobuf:"bytes,7,opt,name=Status,proto3" json:"status" form:"status" bson:"status,omitempty"`              
	HomeTeam    *Team      `protobuf:"bytes,8,opt,name=HomeTeam,proto3" json:"homeTeam" form:"homeTeam" bson:"homeTeam,omitempty"`          
	AwayTeam    *Team      `protobuf:"bytes,9,opt,name=AwayTeam,proto3" json:"awayTeam" form:"awayTeam" bson:"awayTeam,omitempty"`          
	ScoreLine   *ScoreLine `protobuf:"bytes,10,opt,name=ScoreLine,proto3" json:"scoreline" form:"scoreline" bson:"scoreline,omitempty"`       
	StartTime   int64      `protobuf:"varint,11,opt,name=StartTime,proto3" json:"startTime" form:"startTime" bson:"startTime,omitempty"`      
	DateCreated int64      `protobuf:"varint,12,opt,name=DateCreated,proto3" json:"dateCreated" form:"dateCreated" bson:"dateCreated,omitempty"`  
	Outcomes    *Outcomes  `protobuf:"bytes,13,opt,name=Outcomes,proto3" json:"outcomes,omitempty" form:"outcomes" bson:"outcomes,omitempty"`         
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{3}
}

func (x *Match) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Match) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Match) GetOdds() *Odds {
	if x != nil {
		return x.Odds
	}
	return nil
}

func (x *Match) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

func (x *Match) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Match) GetLeague() *League {
	if x != nil {
		return x.League
	}
	return nil
}

func (x *Match) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Match) GetHomeTeam() *Team {
	if x != nil {
		return x.HomeTeam
	}
	return nil
}

func (x *Match) GetAwayTeam() *Team {
	if x != nil {
		return x.AwayTeam
	}
	return nil
}

func (x *Match) GetScoreLine() *ScoreLine {
	if x != nil {
		return x.ScoreLine
	}
	return nil
}

func (x *Match) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Match) GetDateCreated() int64 {
	if x != nil {
		return x.DateCreated
	}
	return 0
}

func (x *Match) GetOutcomes() *Outcomes {
	if x != nil {
		return x.Outcomes
	}
	return nil
}

type Odds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Draw        float64 `protobuf:"fixed64,1,opt,name=Draw,proto3" json:"draw" bson:"draw"`                
	HomeTeamWin float64 `protobuf:"fixed64,2,opt,name=HomeTeamWin,proto3" json:"homeTeamWin" bson:"homeTeamWin"`  
	AwayTeamWin float64 `protobuf:"fixed64,3,opt,name=AwayTeamWin,proto3" json:"awayTeamWin" bson:"awayTeamWin"`  
}

func (x *Odds) Reset() {
	*x = Odds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Odds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Odds) ProtoMessage() {}

func (x *Odds) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Odds.ProtoReflect.Descriptor instead.
func (*Odds) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{4}
}

func (x *Odds) GetDraw() float64 {
	if x != nil {
		return x.Draw
	}
	return 0
}

func (x *Odds) GetHomeTeamWin() float64 {
	if x != nil {
		return x.HomeTeamWin
	}
	return 0
}

func (x *Odds) GetAwayTeamWin() float64 {
	if x != nil {
		return x.AwayTeamWin
	}
	return 0
}

type ScoreLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeTeam int64 `protobuf:"varint,1,opt,name=HomeTeam,proto3" json:"homeTeam" bson:"homeTeam"`  
	AwayTeam int64 `protobuf:"varint,2,opt,name=AwayTeam,proto3" json:"awayTeam" bson:"awayTeam"`  
}

func (x *ScoreLine) Reset() {
	*x = ScoreLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreLine) ProtoMessage() {}

func (x *ScoreLine) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreLine.ProtoReflect.Descriptor instead.
func (*ScoreLine) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{5}
}

func (x *ScoreLine) GetHomeTeam() int64 {
	if x != nil {
		return x.HomeTeam
	}
	return 0
}

func (x *ScoreLine) GetAwayTeam() int64 {
	if x != nil {
		return x.AwayTeam
	}
	return 0
}

type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeTeam int64 `protobuf:"varint,1,opt,name=HomeTeam,proto3" json:"homeTeam" bson:"homeTeam"`  
	AwayTeam int64 `protobuf:"varint,2,opt,name=AwayTeam,proto3" json:"awayTeam" bson:"awayTeam"`  
	Time     int64 `protobuf:"varint,3,opt,name=Time,proto3" json:"time" form:"time" bson:"time,omitempty"`          
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{6}
}

func (x *Score) GetHomeTeam() int64 {
	if x != nil {
		return x.HomeTeam
	}
	return 0
}

func (x *Score) GetAwayTeam() int64 {
	if x != nil {
		return x.AwayTeam
	}
	return 0
}

func (x *Score) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type Outcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       string   `protobuf:"bytes,1,opt,name=Result,proto3" json:"-" bson:"-"`              
	Duration     int64    `protobuf:"varint,2,opt,name=Duration,proto3" json:"duration" bson:"duration"`         
	ScoreHistory []*Score `protobuf:"bytes,3,rep,name=ScoreHistory,proto3" json:"scoreHistory" form:"scoreHistory" bson:"scoreHistory"`  
}

func (x *Outcome) Reset() {
	*x = Outcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Outcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outcome) ProtoMessage() {}

func (x *Outcome) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outcome.ProtoReflect.Descriptor instead.
func (*Outcome) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{7}
}

func (x *Outcome) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Outcome) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Outcome) GetScoreHistory() []*Score {
	if x != nil {
		return x.ScoreHistory
	}
	return nil
}

type Outcomes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Draw        *Outcome `protobuf:"bytes,1,opt,name=Draw,proto3" json:"draw,omitempty" form:"draw" bson:"draw,omitempty"`                
	HomeTeamWin *Outcome `protobuf:"bytes,2,opt,name=HomeTeamWin,proto3" json:"homeTeamWin,omitempty" form:"homeTeamWin" bson:"homeTeamWin,omitempty"`  
	AwayTeamWin *Outcome `protobuf:"bytes,3,opt,name=AwayTeamWin,proto3" json:"awayTeamWin,omitempty" form:"awayTeamWin" bson:"awayTeamWin,omitempty"`  
}

func (x *Outcomes) Reset() {
	*x = Outcomes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Outcomes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outcomes) ProtoMessage() {}

func (x *Outcomes) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outcomes.ProtoReflect.Descriptor instead.
func (*Outcomes) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{8}
}

func (x *Outcomes) GetDraw() *Outcome {
	if x != nil {
		return x.Draw
	}
	return nil
}

func (x *Outcomes) GetHomeTeamWin() *Outcome {
	if x != nil {
		return x.HomeTeamWin
	}
	return nil
}

func (x *Outcomes) GetAwayTeamWin() *Outcome {
	if x != nil {
		return x.AwayTeamWin
	}
	return nil
}

type BetUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`  
	Bet     *Bet   `protobuf:"bytes,2,opt,name=Bet,proto3" json:"bet"`          
}

func (x *BetUpdateResponse) Reset() {
	*x = BetUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BetUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetUpdateResponse) ProtoMessage() {}

func (x *BetUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetUpdateResponse.ProtoReflect.Descriptor instead.
func (*BetUpdateResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{9}
}

func (x *BetUpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BetUpdateResponse) GetBet() *Bet {
	if x != nil {
		return x.Bet
	}
	return nil
}

type UpdateBetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"id" bson:"-"`                  
	Stake      float64 `protobuf:"fixed64,2,opt,name=Stake,proto3" json:"stake" bson:"stake"`          
	Prediction string  `protobuf:"bytes,3,opt,name=Prediction,proto3" json:"prediction" bson:"prediction"`  
}

func (x *UpdateBetRequest) Reset() {
	*x = UpdateBetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBetRequest) ProtoMessage() {}

func (x *UpdateBetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBetRequest.ProtoReflect.Descriptor instead.
func (*UpdateBetRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateBetRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UpdateBetRequest) GetStake() float64 {
	if x != nil {
		return x.Stake
	}
	return 0
}

func (x *UpdateBetRequest) GetPrediction() string {
	if x != nil {
		return x.Prediction
	}
	return ""
}

type ScheduleStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id" bson:"-"`                 
	Status    string `protobuf:"bytes,2,opt,name=Status,proto3" json:"-" bson:"status"`         
	StartTime int64  `protobuf:"varint,3,opt,name=StartTime,proto3" json:"startTime" bson:"startTime"`  
}

func (x *ScheduleStreamRequest) Reset() {
	*x = ScheduleStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleStreamRequest) ProtoMessage() {}

func (x *ScheduleStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleStreamRequest.ProtoReflect.Descriptor instead.
func (*ScheduleStreamRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{11}
}

func (x *ScheduleStreamRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ScheduleStreamRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ScheduleStreamRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type DeleteBetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BetId string `protobuf:"bytes,1,opt,name=BetId,proto3" json:"betId"`  
}

func (x *DeleteBetRequest) Reset() {
	*x = DeleteBetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBetRequest) ProtoMessage() {}

func (x *DeleteBetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBetRequest.ProtoReflect.Descriptor instead.
func (*DeleteBetRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteBetRequest) GetBetId() string {
	if x != nil {
		return x.BetId
	}
	return ""
}

type League struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id" bson:"_id"`      
	Logo string `protobuf:"bytes,2,opt,name=Logo,proto3" json:"logo" bson:"logo,omitempty"`  
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"name" bson:"name,omitempty"`  
}

func (x *League) Reset() {
	*x = League{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *League) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*League) ProtoMessage() {}

func (x *League) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use League.ProtoReflect.Descriptor instead.
func (*League) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{13}
}

func (x *League) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *League) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *League) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	League *League `protobuf:"bytes,1,opt,name=League,proto3" json:"league"`  
	Logo   *File   `protobuf:"bytes,2,opt,name=Logo,proto3" json:"logo"`      
}

func (x *AddLeagueRequest) Reset() {
	*x = AddLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLeagueRequest) ProtoMessage() {}

func (x *AddLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLeagueRequest.ProtoReflect.Descriptor instead.
func (*AddLeagueRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{14}
}

func (x *AddLeagueRequest) GetLeague() *League {
	if x != nil {
		return x.League
	}
	return nil
}

func (x *AddLeagueRequest) GetLogo() *File {
	if x != nil {
		return x.Logo
	}
	return nil
}

type AddLeagueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string  `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`  
	League  *League `protobuf:"bytes,2,opt,name=League,proto3" json:"league"`    
}

func (x *AddLeagueResponse) Reset() {
	*x = AddLeagueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLeagueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLeagueResponse) ProtoMessage() {}

func (x *AddLeagueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLeagueResponse.ProtoReflect.Descriptor instead.
func (*AddLeagueResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{15}
}

func (x *AddLeagueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddLeagueResponse) GetLeague() *League {
	if x != nil {
		return x.League
	}
	return nil
}

type GetLeaguesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leagues []*League `protobuf:"bytes,1,rep,name=Leagues,proto3" json:"leagues"`  
}

func (x *GetLeaguesResponse) Reset() {
	*x = GetLeaguesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLeaguesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaguesResponse) ProtoMessage() {}

func (x *GetLeaguesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaguesResponse.ProtoReflect.Descriptor instead.
func (*GetLeaguesResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{16}
}

func (x *GetLeaguesResponse) GetLeagues() []*League {
	if x != nil {
		return x.Leagues
	}
	return nil
}

type DeleteLeagueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id"`  
}

func (x *DeleteLeagueRequest) Reset() {
	*x = DeleteLeagueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeagueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeagueRequest) ProtoMessage() {}

func (x *DeleteLeagueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeagueRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeagueRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteLeagueRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteLeagueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`  
}

func (x *DeleteLeagueResponse) Reset() {
	*x = DeleteLeagueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLeagueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeagueResponse) ProtoMessage() {}

func (x *DeleteLeagueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeagueResponse.ProtoReflect.Descriptor instead.
func (*DeleteLeagueResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteLeagueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id" bson:"_id"`                
	Logo      string `protobuf:"bytes,2,opt,name=Logo,proto3" json:"logo" bson:"logo,omitempty"`            
	Name      string `protobuf:"bytes,3,opt,name=Name,proto3" json:"name" bson:"name,omitempty" form:"name"`            
	ShortName string `protobuf:"bytes,4,opt,name=ShortName,proto3" json:"shortName" bson:"shortName,omitempty" form:"shortName"`  
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{19}
}

func (x *Team) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Team) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

type AddTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team *Team `protobuf:"bytes,1,opt,name=Team,proto3" json:"team"`  
	Logo *File `protobuf:"bytes,2,opt,name=Logo,proto3" json:"logo"`  
}

func (x *AddTeamRequest) Reset() {
	*x = AddTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamRequest) ProtoMessage() {}

func (x *AddTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamRequest.ProtoReflect.Descriptor instead.
func (*AddTeamRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{20}
}

func (x *AddTeamRequest) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *AddTeamRequest) GetLogo() *File {
	if x != nil {
		return x.Logo
	}
	return nil
}

type GetTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams []*Team `protobuf:"bytes,1,rep,name=Teams,proto3" json:"teams"`  
}

func (x *GetTeamsResponse) Reset() {
	*x = GetTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsResponse) ProtoMessage() {}

func (x *GetTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsResponse.ProtoReflect.Descriptor instead.
func (*GetTeamsResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{21}
}

func (x *GetTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

type AddTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`  
	Team    *Team  `protobuf:"bytes,2,opt,name=Team,proto3" json:"team"`        
}

func (x *AddTeamResponse) Reset() {
	*x = AddTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamResponse) ProtoMessage() {}

func (x *AddTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamResponse.ProtoReflect.Descriptor instead.
func (*AddTeamResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{22}
}

func (x *AddTeamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type DeleteTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id"`  
}

func (x *DeleteTeamRequest) Reset() {
	*x = DeleteTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamRequest) ProtoMessage() {}

func (x *DeleteTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeamRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteTeamRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type DeleteTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`  
}

func (x *DeleteTeamResponse) Reset() {
	*x = DeleteTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamResponse) ProtoMessage() {}

func (x *DeleteTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamResponse.ProtoReflect.Descriptor instead.
func (*DeleteTeamResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteTeamResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMatchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=Status,proto3" json:"status"`  
	Type   string `protobuf:"bytes,2,opt,name=Type,proto3" json:"type"`      
	Page   string `protobuf:"bytes,3,opt,name=Page,proto3" json:"page"`      
	Limit  int64  `protobuf:"varint,4,opt,name=Limit,proto3" json:"limit"`   
}

func (x *GetMatchesRequest) Reset() {
	*x = GetMatchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchesRequest) ProtoMessage() {}

func (x *GetMatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchesRequest.ProtoReflect.Descriptor instead.
func (*GetMatchesRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{25}
}

func (x *GetMatchesRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetMatchesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetMatchesRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetMatchesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetMatchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matches []*Match `protobuf:"bytes,1,rep,name=Matches,proto3" json:"matches"`  
}

func (x *GetMatchesResponse) Reset() {
	*x = GetMatchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchesResponse) ProtoMessage() {}

func (x *GetMatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchesResponse.ProtoReflect.Descriptor instead.
func (*GetMatchesResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{26}
}

func (x *GetMatchesResponse) GetMatches() []*Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

type GetMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id"`  
}

func (x *GetMatchRequest) Reset() {
	*x = GetMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchRequest) ProtoMessage() {}

func (x *GetMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchRequest.ProtoReflect.Descriptor instead.
func (*GetMatchRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{27}
}

func (x *GetMatchRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"data"`          
	Filename string `protobuf:"bytes,2,opt,name=Filename,proto3" json:"fileName"`  
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{28}
}

func (x *File) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type AddOutcomesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id" bson:"_id"`              
	Outcomes string `protobuf:"bytes,2,opt,name=Outcomes,proto3" json:"outcomes" bson:"outcomes"`  
	Video    *File  `protobuf:"bytes,3,opt,name=Video,proto3" json:"video" bson:"video"`        
}

func (x *AddOutcomesRequest) Reset() {
	*x = AddOutcomesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOutcomesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOutcomesRequest) ProtoMessage() {}

func (x *AddOutcomesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOutcomesRequest.ProtoReflect.Descriptor instead.
func (*AddOutcomesRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{29}
}

func (x *AddOutcomesRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *AddOutcomesRequest) GetOutcomes() string {
	if x != nil {
		return x.Outcomes
	}
	return ""
}

func (x *AddOutcomesRequest) GetVideo() *File {
	if x != nil {
		return x.Video
	}
	return nil
}

type GameSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active bool `protobuf:"varint,1,opt,name=Active,proto3" json:"active" bson:"active"`  
}

func (x *GameSettings) Reset() {
	*x = GameSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameSettings) ProtoMessage() {}

func (x *GameSettings) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameSettings.ProtoReflect.Descriptor instead.
func (*GameSettings) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{30}
}

func (x *GameSettings) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type QuickSoccerAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgID       string        `protobuf:"bytes,1,opt,name=OrgID,proto3" json:"orgId" bson:"orgId,omitempty"`                
	Virtual     *GameSettings `protobuf:"bytes,2,opt,name=Virtual,proto3" json:"virtual" bson:"virtual,omitempty"`            
	Simulator   *GameSettings `protobuf:"bytes,3,opt,name=Simulator,proto3" json:"simulator" bson:"simulator,omitempty"`        
	LiveBalance float64       `protobuf:"fixed64,4,opt,name=LiveBalance,proto3" json:"liveBalance" bson:"liveBalance,omitempty"`  
	DemoBalance float64       `protobuf:"fixed64,5,opt,name=DemoBalance,proto3" json:"demoBalance" bson:"demoBalance,omitempty"`  
	ExpiryDate  int64         `protobuf:"varint,6,opt,name=ExpiryDate,proto3" json:"expiryDate,omitempty" bson:"expiryDate,omitempty"`     
}

func (x *QuickSoccerAdmin) Reset() {
	*x = QuickSoccerAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickSoccerAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickSoccerAdmin) ProtoMessage() {}

func (x *QuickSoccerAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickSoccerAdmin.ProtoReflect.Descriptor instead.
func (*QuickSoccerAdmin) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{31}
}

func (x *QuickSoccerAdmin) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

func (x *QuickSoccerAdmin) GetVirtual() *GameSettings {
	if x != nil {
		return x.Virtual
	}
	return nil
}

func (x *QuickSoccerAdmin) GetSimulator() *GameSettings {
	if x != nil {
		return x.Simulator
	}
	return nil
}

func (x *QuickSoccerAdmin) GetLiveBalance() float64 {
	if x != nil {
		return x.LiveBalance
	}
	return 0
}

func (x *QuickSoccerAdmin) GetDemoBalance() float64 {
	if x != nil {
		return x.DemoBalance
	}
	return 0
}

func (x *QuickSoccerAdmin) GetExpiryDate() int64 {
	if x != nil {
		return x.ExpiryDate
	}
	return 0
}

type SubscribeSoccerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package  string `protobuf:"bytes,1,opt,name=Package,proto3" json:"package"`     
	Duration int64  `protobuf:"varint,2,opt,name=Duration,proto3" json:"duration"`  
}

func (x *SubscribeSoccerRequest) Reset() {
	*x = SubscribeSoccerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeSoccerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeSoccerRequest) ProtoMessage() {}

func (x *SubscribeSoccerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeSoccerRequest.ProtoReflect.Descriptor instead.
func (*SubscribeSoccerRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{32}
}

func (x *SubscribeSoccerRequest) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *SubscribeSoccerRequest) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type SubscribeSoccerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string            `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`    
	Settings *QuickSoccerAdmin `protobuf:"bytes,2,opt,name=Settings,proto3" json:"settings"`  
}

func (x *SubscribeSoccerResponse) Reset() {
	*x = SubscribeSoccerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeSoccerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeSoccerResponse) ProtoMessage() {}

func (x *SubscribeSoccerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeSoccerResponse.ProtoReflect.Descriptor instead.
func (*SubscribeSoccerResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{33}
}

func (x *SubscribeSoccerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SubscribeSoccerResponse) GetSettings() *QuickSoccerAdmin {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GetSoccerSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSoccerSettingsRequest) Reset() {
	*x = GetSoccerSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSoccerSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSoccerSettingsRequest) ProtoMessage() {}

func (x *GetSoccerSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSoccerSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSoccerSettingsRequest) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{34}
}

type UpdateSoccerSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string            `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`    
	Settings *QuickSoccerAdmin `protobuf:"bytes,2,opt,name=Settings,proto3" json:"settings"`  
}

func (x *UpdateSoccerSettingsResponse) Reset() {
	*x = UpdateSoccerSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSoccerSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSoccerSettingsResponse) ProtoMessage() {}

func (x *UpdateSoccerSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSoccerSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateSoccerSettingsResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateSoccerSettingsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSoccerSettingsResponse) GetSettings() *QuickSoccerAdmin {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AddOutcomesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=Message,proto3" json:"message"`  
}

func (x *AddOutcomesResponse) Reset() {
	*x = AddOutcomesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quicksoccer_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOutcomesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOutcomesResponse) ProtoMessage() {}

func (x *AddOutcomesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quicksoccer_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOutcomesResponse.ProtoReflect.Descriptor instead.
func (*AddOutcomesResponse) Descriptor() ([]byte, []int) {
	return file_quicksoccer_proto_rawDescGZIP(), []int{36}
}

func (x *AddOutcomesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_quicksoccer_proto protoreflect.FileDescriptor

var file_quicksoccer_proto_rawDesc = []byte{
	0x0a, 0x11, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x73, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x6c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x2b,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x04, 0x42, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x04, 0x2e, 0x42, 0x65, 0x74, 0x52, 0x04, 0x42, 0x65, 0x74, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x03,
	0x42, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x42, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x4f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4f, 0x72, 0x67, 0x49, 0x64, 0x22, 0x82, 0x03, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x4f, 0x64, 0x64, 0x73, 0x52, 0x04, 0x4f, 0x64, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f,
	0x72, 0x67, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x48, 0x6f,
	0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x08, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x08, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x09, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x09, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73,
	0x52, 0x08, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x04, 0x4f, 0x64,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x44, 0x72, 0x61, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x48, 0x6f, 0x6d,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x57, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x77, 0x61, 0x79,
	0x54, 0x65, 0x61, 0x6d, 0x57, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x41,
	0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x57, 0x69, 0x6e, 0x22, 0x43, 0x0a, 0x09, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x22,
	0x53, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x48, 0x6f, 0x6d, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x0c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x0c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22,
	0x80, 0x01, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x04,
	0x44, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x52, 0x04, 0x44, 0x72, 0x61, 0x77, 0x12, 0x2a, 0x0a, 0x0b, 0x48, 0x6f,
	0x6d, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x57, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x0b, 0x48, 0x6f, 0x6d, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x57, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x0b, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x57, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x0b, 0x41, 0x77, 0x61, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x57,
	0x69, 0x6e, 0x22, 0x45, 0x0a, 0x11, 0x42, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x03, 0x42, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04,
	0x2e, 0x42, 0x65, 0x74, 0x52, 0x03, 0x42, 0x65, 0x74, 0x22, 0x58, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x15, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x65, 0x74, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x06,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4e,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x06, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0x4e,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a,
	0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x06, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x07,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x30,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x5c, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x19, 0x0a, 0x04, 0x4c,
	0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x04, 0x4c, 0x6f, 0x67, 0x6f, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x54, 0x65,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x05, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x46, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x22,
	0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x69, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x36, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x07,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x36, 0x0a, 0x04, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x22, 0x26, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x51, 0x75,
	0x69, 0x63, 0x6b, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x4f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f,
	0x72, 0x67, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x07, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x07, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x2b, 0x0a,
	0x09, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x09, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69,
	0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x6d, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x44, 0x65, 0x6d, 0x6f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x22, 0x4e,
	0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x63, 0x63, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62,
	0x0a, 0x17, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x63, 0x63, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x53, 0x6f, 0x63,
	0x63, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x51, 0x75, 0x69,
	0x63, 0x6b, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x08, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xa2, 0x07, 0x0a, 0x0b, 0x51, 0x75, 0x69,
	0x63, 0x6b, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x42, 0x65, 0x74, 0x12, 0x04, 0x2e, 0x42, 0x65, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x10, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x06, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x05, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x1a, 0x10, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0f, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x65, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x42, 0x65, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x41,
	0x64, 0x64, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x11, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x41, 0x64,
	0x64, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x42, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4f,
	0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x75, 0x74,
	0x63, 0x6f, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x41,
	0x64, 0x64, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x65,
	0x61, 0x67, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x12, 0x14, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x12, 0x17, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x63, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x12, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63,
	0x63, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x11, 0x2e, 0x51, 0x75,
	0x69, 0x63, 0x6b, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1d,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x63, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x25, 0x5a,
	0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x78, 0x75,
	0x73, 0x62, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x73, 0x6f,
	0x63, 0x63, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quicksoccer_proto_rawDescOnce sync.Once
	file_quicksoccer_proto_rawDescData = file_quicksoccer_proto_rawDesc
)

func file_quicksoccer_proto_rawDescGZIP() []byte {
	file_quicksoccer_proto_rawDescOnce.Do(func() {
		file_quicksoccer_proto_rawDescData = protoimpl.X.CompressGZIP(file_quicksoccer_proto_rawDescData)
	})
	return file_quicksoccer_proto_rawDescData
}

var file_quicksoccer_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_quicksoccer_proto_goTypes = []interface{}{
	(*GetBetsRequest)(nil),               // 0: GetBetsRequest
	(*GetBetsResponse)(nil),              // 1: GetBetsResponse
	(*Bet)(nil),                          // 2: Bet
	(*Match)(nil),                        // 3: Match
	(*Odds)(nil),                         // 4: Odds
	(*ScoreLine)(nil),                    // 5: ScoreLine
	(*Score)(nil),                        // 6: Score
	(*Outcome)(nil),                      // 7: Outcome
	(*Outcomes)(nil),                     // 8: Outcomes
	(*BetUpdateResponse)(nil),            // 9: BetUpdateResponse
	(*UpdateBetRequest)(nil),             // 10: UpdateBetRequest
	(*ScheduleStreamRequest)(nil),        // 11: ScheduleStreamRequest
	(*DeleteBetRequest)(nil),             // 12: DeleteBetRequest
	(*League)(nil),                       // 13: League
	(*AddLeagueRequest)(nil),             // 14: AddLeagueRequest
	(*AddLeagueResponse)(nil),            // 15: AddLeagueResponse
	(*GetLeaguesResponse)(nil),           // 16: GetLeaguesResponse
	(*DeleteLeagueRequest)(nil),          // 17: DeleteLeagueRequest
	(*DeleteLeagueResponse)(nil),         // 18: DeleteLeagueResponse
	(*Team)(nil),                         // 19: Team
	(*AddTeamRequest)(nil),               // 20: AddTeamRequest
	(*GetTeamsResponse)(nil),             // 21: GetTeamsResponse
	(*AddTeamResponse)(nil),              // 22: AddTeamResponse
	(*DeleteTeamRequest)(nil),            // 23: DeleteTeamRequest
	(*DeleteTeamResponse)(nil),           // 24: DeleteTeamResponse
	(*GetMatchesRequest)(nil),            // 25: GetMatchesRequest
	(*GetMatchesResponse)(nil),           // 26: GetMatchesResponse
	(*GetMatchRequest)(nil),              // 27: GetMatchRequest
	(*File)(nil),                         // 28: File
	(*AddOutcomesRequest)(nil),           // 29: AddOutcomesRequest
	(*GameSettings)(nil),                 // 30: GameSettings
	(*QuickSoccerAdmin)(nil),             // 31: QuickSoccerAdmin
	(*SubscribeSoccerRequest)(nil),       // 32: SubscribeSoccerRequest
	(*SubscribeSoccerResponse)(nil),      // 33: SubscribeSoccerResponse
	(*GetSoccerSettingsRequest)(nil),     // 34: GetSoccerSettingsRequest
	(*UpdateSoccerSettingsResponse)(nil), // 35: UpdateSoccerSettingsResponse
	(*AddOutcomesResponse)(nil),          // 36: AddOutcomesResponse
	(*empty.Empty)(nil),                  // 37: google.protobuf.Empty
}
var file_quicksoccer_proto_depIdxs = []int32{
	2,  // 0: GetBetsResponse.Bets:type_name -> Bet
	4,  // 1: Match.Odds:type_name -> Odds
	13, // 2: Match.League:type_name -> League
	19, // 3: Match.HomeTeam:type_name -> Team
	19, // 4: Match.AwayTeam:type_name -> Team
	5,  // 5: Match.ScoreLine:type_name -> ScoreLine
	8,  // 6: Match.Outcomes:type_name -> Outcomes
	6,  // 7: Outcome.ScoreHistory:type_name -> Score
	7,  // 8: Outcomes.Draw:type_name -> Outcome
	7,  // 9: Outcomes.HomeTeamWin:type_name -> Outcome
	7,  // 10: Outcomes.AwayTeamWin:type_name -> Outcome
	2,  // 11: BetUpdateResponse.Bet:type_name -> Bet
	13, // 12: AddLeagueRequest.League:type_name -> League
	28, // 13: AddLeagueRequest.Logo:type_name -> File
	13, // 14: AddLeagueResponse.League:type_name -> League
	13, // 15: GetLeaguesResponse.Leagues:type_name -> League
	19, // 16: AddTeamRequest.Team:type_name -> Team
	28, // 17: AddTeamRequest.Logo:type_name -> File
	19, // 18: GetTeamsResponse.Teams:type_name -> Team
	19, // 19: AddTeamResponse.Team:type_name -> Team
	3,  // 20: GetMatchesResponse.Matches:type_name -> Match
	28, // 21: AddOutcomesRequest.Video:type_name -> File
	30, // 22: QuickSoccerAdmin.Virtual:type_name -> GameSettings
	30, // 23: QuickSoccerAdmin.Simulator:type_name -> GameSettings
	31, // 24: SubscribeSoccerResponse.Settings:type_name -> QuickSoccerAdmin
	31, // 25: UpdateSoccerSettingsResponse.Settings:type_name -> QuickSoccerAdmin
	2,  // 26: QuickSoccer.PlaceBet:input_type -> Bet
	27, // 27: QuickSoccer.GetMatch:input_type -> GetMatchRequest
	19, // 28: QuickSoccer.UpdateTeam:input_type -> Team
	20, // 29: QuickSoccer.AddTeam:input_type -> AddTeamRequest
	0,  // 30: QuickSoccer.GetBets:input_type -> GetBetsRequest
	12, // 31: QuickSoccer.DeleteBet:input_type -> DeleteBetRequest
	14, // 32: QuickSoccer.AddLeague:input_type -> AddLeagueRequest
	10, // 33: QuickSoccer.UpdateBet:input_type -> UpdateBetRequest
	37, // 34: QuickSoccer.GetTeams:input_type -> google.protobuf.Empty
	25, // 35: QuickSoccer.GetMatches:input_type -> GetMatchesRequest
	23, // 36: QuickSoccer.DeleteTeam:input_type -> DeleteTeamRequest
	29, // 37: QuickSoccer.AddOutcomes:input_type -> AddOutcomesRequest
	37, // 38: QuickSoccer.GetLeagues:input_type -> google.protobuf.Empty
	17, // 39: QuickSoccer.DeleteLeague:input_type -> DeleteLeagueRequest
	32, // 40: QuickSoccer.SubscribeSoccer:input_type -> SubscribeSoccerRequest
	34, // 41: QuickSoccer.GetSoccerSettings:input_type -> GetSoccerSettingsRequest
	31, // 42: QuickSoccer.UpdateSoccerSettings:input_type -> QuickSoccerAdmin
	9,  // 43: QuickSoccer.PlaceBet:output_type -> BetUpdateResponse
	3,  // 44: QuickSoccer.GetMatch:output_type -> Match
	22, // 45: QuickSoccer.UpdateTeam:output_type -> AddTeamResponse
	22, // 46: QuickSoccer.AddTeam:output_type -> AddTeamResponse
	1,  // 47: QuickSoccer.GetBets:output_type -> GetBetsResponse
	9,  // 48: QuickSoccer.DeleteBet:output_type -> BetUpdateResponse
	15, // 49: QuickSoccer.AddLeague:output_type -> AddLeagueResponse
	9,  // 50: QuickSoccer.UpdateBet:output_type -> BetUpdateResponse
	21, // 51: QuickSoccer.GetTeams:output_type -> GetTeamsResponse
	26, // 52: QuickSoccer.GetMatches:output_type -> GetMatchesResponse
	24, // 53: QuickSoccer.DeleteTeam:output_type -> DeleteTeamResponse
	36, // 54: QuickSoccer.AddOutcomes:output_type -> AddOutcomesResponse
	16, // 55: QuickSoccer.GetLeagues:output_type -> GetLeaguesResponse
	18, // 56: QuickSoccer.DeleteLeague:output_type -> DeleteLeagueResponse
	33, // 57: QuickSoccer.SubscribeSoccer:output_type -> SubscribeSoccerResponse
	31, // 58: QuickSoccer.GetSoccerSettings:output_type -> QuickSoccerAdmin
	35, // 59: QuickSoccer.UpdateSoccerSettings:output_type -> UpdateSoccerSettingsResponse
	43, // [43:60] is the sub-list for method output_type
	26, // [26:43] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_quicksoccer_proto_init() }
func file_quicksoccer_proto_init() {
	if File_quicksoccer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_quicksoccer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Odds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Outcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Outcomes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BetUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*League); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddLeagueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLeaguesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeagueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLeagueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOutcomesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickSoccerAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeSoccerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeSoccerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSoccerSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSoccerSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quicksoccer_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOutcomesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quicksoccer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quicksoccer_proto_goTypes,
		DependencyIndexes: file_quicksoccer_proto_depIdxs,
		MessageInfos:      file_quicksoccer_proto_msgTypes,
	}.Build()
	File_quicksoccer_proto = out.File
	file_quicksoccer_proto_rawDesc = nil
	file_quicksoccer_proto_goTypes = nil
	file_quicksoccer_proto_depIdxs = nil
}
